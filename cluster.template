{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "LambCI build servers running on ECS",
  "Parameters": {
    "InstanceType": {
      "Description": "EC2 instance type (t2.micro, t2.medium, t2.large, etc)",
      "Type": "String",
      "Default": "t2.micro",
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "VpcId": {
      "Type": "AWS::EC2::VPC::Id",
      "Description" : "VpcId of your existing Virtual Private Cloud (VPC)",
      "ConstraintDescription" : "must be the VPC Id of an existing Virtual Private Cloud."
    },
    "Subnets": {
      "Type" : "List<AWS::EC2::Subnet::Id>",
      "Description" : "The list of SubnetIds in your Virtual Private Cloud (VPC)",
      "ConstraintDescription" : "must be a list of an existing subnets in the selected Virtual Private Cloud."
    },
    "AZs": {
      "Type" : "List<AWS::EC2::AvailabilityZone::Name>",
      "Description" : "The list of AvailabilityZones for your Virtual Private Cloud (VPC)",
      "ConstraintDescription" : "must be a list if valid EC2 availability zones for the selected Virtual Private Cloud"
    }
  },
  "Mappings": {
    "EcsAmisByRegion": {
      "us-east-1": {"ami": "ami-275ffe31"},
      "us-east-2": {"ami": "ami-62745007"},
      "us-west-1": {"ami": "ami-689bc208"},
      "us-west-2": {"ami": "ami-62d35c02"},
      "eu-west-1": {"ami": "ami-95f8d2f3"},
      "eu-west-2": {"ami": "ami-bf9481db"},
      "eu-central-1": {"ami": "ami-085e8a67"},
      "ap-northeast-1": {"ami": "ami-f63f6f91"},
      "ap-southeast-1": {"ami": "ami-b4ae1dd7"},
      "ap-southeast-2": {"ami": "ami-fbe9eb98"},
      "ca-central-1": {"ami": "ami-ee58e58a"}
    }
  },
  "Resources": {
    "Cluster": {
      "Type": "AWS::ECS::Cluster"
    },
    "BuildTask": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [{
          "Name": "build",
          "Image": "lambci/ecs",
          "Memory": 450,
          "LogConfiguration": {
            "LogDriver": "awslogs",
            "Options": {
              "awslogs-group": {"Ref": "EcsLogs"},
              "awslogs-region": {"Ref": "AWS::Region"}
            }
          },
          "Environment": [
            {"Name": "LOG_GROUP", "Value": {"Ref": "EcsLogs"}},
            {"Name": "AWS_REGION", "Value": {"Ref": "AWS::Region"}}
           ],
          "MountPoints": [{"SourceVolume": "docker-socket", "ContainerPath": "/var/run/docker.sock"}]
        }],
        "Volumes": [{"Name": "docker-socket", "Host": {"SourcePath": "/var/run/docker.sock"}}]
      }
    },
    "EcsLogs": {
      "Type": "AWS::Logs::LogGroup"
    },
    "AutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": {"Ref": "AZs"},
        "VPCZoneIdentifier": {"Ref": "Subnets"},
        "LaunchConfigurationName": {"Ref": "LaunchConfig"},
        "DesiredCapacity": "1",
        "MinSize": "0",
        "MaxSize": "4"
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": "1"
        }
      }
    },
    "LaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {"Fn::FindInMap": ["EcsAmisByRegion", {"Ref": "AWS::Region"}, "ami"]},
        "IamInstanceProfile": {"Ref": "InstanceProfile"},
        "InstanceType": {"Ref": "InstanceType"},
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": ["", [
              "#!/bin/bash\n",
              "echo ECS_CLUSTER=", {"Ref": "Cluster"}, " >> /etc/ecs/ecs.config\n",
              "yum install -y aws-cfn-bootstrap\n",
              "/opt/aws/bin/cfn-signal -e $? --resource AutoScalingGroup --stack ", {"Ref": "AWS::StackName"}, " --region ", {"Ref": "AWS::Region"}
            ]]
          }
        }
      }
    },
    "InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [{"Ref": "InstanceRole"}]
      }
    },
    "InstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": {
            "Effect": "Allow",
            "Principal": {"Service": "ec2.amazonaws.com"},
            "Action": "sts:AssumeRole"
          }
        },
        "Policies": [{
          "PolicyName": "RunEcs",
          "PolicyDocument": {
            "Statement": {
              "Effect": "Allow",
              "Action": [
                "ecs:DeregisterContainerInstance",
                "ecs:DiscoverPollEndpoint",
                "ecs:Poll",
                "ecs:RegisterContainerInstance",
                "ecs:StartTelemetrySession",
                "ecs:Submit*"
              ],
              "Resource": "*"
            }
          }
        },{
          "PolicyName": "WriteLogs",
          "PolicyDocument": {
            "Statement": {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "*"
            }
          }
        }]
      }
    }
  }
}
